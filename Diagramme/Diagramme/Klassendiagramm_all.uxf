<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>596</x>
      <y>232</y>
      <w>244</w>
      <h>284</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
Game
--
- m_pWindow : SDL_Window*
- m_pRenderer : SDL_Renderer*

- m_pStateMachine : GameStateMachine*

- m_pStandardLog : Logger*
- m_pErrorLog : Logger*

- m_running : bool
- m_gameWidth : int
- m_gameHeight : int
- m_gameXPos : int
- m_gameYPos : int

- m_pCurrentState : GameState*

- isChangeState : bool
- isPushState : bool
- isPopState : bool
--
+ init (title : string, width : int, height : int, xPos : int, yPos : int, flags : int) : bool
+ handleInput() : void
+ update() : void
+ render() : void
+ setGameOver() : void
+ emergenceyExit(message : const char*)

+ changeState(newState : GameState*) : void
+ pushState(newState : GameState*) : void
+ popState() : void

+ getWindow() : SDL_Window*
+ getRenderer() : SDL_Renderer*
+ isRunning() : bool
+ getGameWidth() : int
+ getGameHeight() : int
+ getGameXPos() : int
+ getGameYPos() : int


+ logStandard() : Logger&amp;
+ logError() : Logger&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1112</x>
      <y>688</y>
      <w>120</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>/GameState/
--
# m_stateID : GameStateID
# m_mapDict : map&lt;string, Map*&gt;
# m_maps : Stack&lt;Map&gt;
# m_callbackFunctions : map&lt;string, void(*)()&gt;
--
/+ onEnter() : void/
/+ onExit() : void/

/+ handleInput() : void/
/+ update() : void/
/+ render() : void/

/+ getStateID() : GameStateID/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1140</x>
      <y>132</y>
      <w>56</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>672</y>
      <w>48</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
GameStateID
--
menuState
playState
pauseState
howToPlayState
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>856</x>
      <y>652</y>
      <w>536</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>FiniteStateMachine
--
bg=orange
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>876</x>
      <y>676</y>
      <w>116</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>GameStateMachine
--
- m_stateStack : Stack&lt;GameState&gt;
--
+ handleInput() : void
+ update() : void
+ render() : void

+ pushState(newState : GameState*) : void
+ popState() : void
+ changeState(newState : GameState*) : void

+ getCurrentState() : GameState*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1100</x>
      <y>816</y>
      <w>80</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>MenuState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- menuToPlay() : void_
_- menuToHowToPlay() : void_
_- exit() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1140</x>
      <y>780</y>
      <w>28</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>816</y>
      <w>80</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>PauseState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- resumePlay() : void_
_- playToMenu() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1184</x>
      <y>816</y>
      <w>60</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>PlayState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>780</y>
      <w>52</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1184</x>
      <y>780</y>
      <w>96</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1212</x>
      <y>456</y>
      <w>56</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1136</x>
      <y>456</y>
      <w>68</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1276</x>
      <y>412</y>
      <w>120</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
successor
m1=1
m2=0,1</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0;220.0;290.0;190.0;290.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1140</x>
      <y>160</y>
      <w>244</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
TextureManager
--
- m_textureMap : map&lt;string, SDL_Texture*&gt;
--
+ load(id : string, path : string, pRenderer : SDL_Renderer*) : bool

+ draw(id : string, x : int, y : int, width : int, height : int) : void
+ drawFrame(id : string, x : int, y : int, width : int, height : int, frameRow: int, frameCol : int) : void
+ drawTile(tileset : Tileset&amp;, tileId : int, x : int, y : int) : void

+ clearFromTextureMap(id : string) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1868</x>
      <y>452</y>
      <w>132</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>/GameObject/
--
# m_uniqueId : unsigned long long
# m_isVisible : bool 
--
/+ load(parameters : const ParamLoader&amp;) : void/
/+ update() : void/
/+ draw() : void/

/+ collision() : void/

+ getUniqueId() : unsigned long long
+ isVisible() : bool

+ setVisibility(b : bool) : void

/+ destroy() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>352</x>
      <y>256</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Logger
--
- m_outputStream : ostream*
- m_heap : bool
--
+ operator&lt;&lt;(msg : T) : Logger&amp;
+ operator&lt;&lt;((*f)(std::ostream&amp;) : std::ostream&amp;) : std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>508</x>
      <y>264</y>
      <w>96</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=2
m2=1
has</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>316</y>
      <w>80</w>
      <h>368</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
controls</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0;180.0;900.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>996</x>
      <y>352</y>
      <w>396</w>
      <h>284</h>
    </coordinates>
    <panel_attributes>DataStructure
--
bg=green
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>404</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
topNode
m1=1</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>988</x>
      <y>436</y>
      <w>72</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;-



has
m1=1
m2=1
</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;630.0;10.0;630.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1156</x>
      <y>332</y>
      <w>100</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>Der Stapel wurde als 
Klassen-Template implementiert
Für weitere Erklärungen siehe Code.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>384</y>
      <w>104</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>template=T
Stack
--
- m_pTopNode : StackElement&lt;T&gt;*
--
+ push(pNewNodeData : T*) : void	
+ pop() : void

+ getTopNodeData : T*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1152</x>
      <y>392</y>
      <w>132</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>template=T
/StackElement/
--
--
/+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*/
/+ getSuccessor() : StackElement&lt;T&gt;*/

/+ getData() : T*/

/+ destroy() : void/
/+ destroyAll() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>488</y>
      <w>132</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>template=T
Closure
--
--
+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*

+ getSuccessor() : StackElement&lt;T&gt;*
+ getData() : T*

+ destroy() : void
+ destroyAll() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>488</y>
      <w>156</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>template=T
Node
--
- m_pSuccessor : StackElement&lt;T&gt;*
- m_pData : T*
--
+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*

+ getSuccessor() : StackElement&lt;T&gt;*
+ getData() : T*

+ setSuccessor(pNewSuccessor : StackElement&lt;T&gt;*) : void

+ destroy() : void
+ destroyAll() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1568</x>
      <y>432</y>
      <w>116</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Player 
--
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1716</x>
      <y>444</y>
      <w>128</w>
      <h>172</h>
    </coordinates>
    <panel_attributes>SDL_GameObject
--
# m_objectRect : ObjectRectangle
# m_collisionRects : vector&lt;ObjectRectangle&gt;
# m_currentRow : int
# m_currentCol : int
# m_numCols : int
# m_numRows : int
# m_animSpeed : int
# m_velocity : Vector2D
# m_textureId : string
# m_mapId : string
--
/+ load(parameters : const ParamLoader&amp;) : void/
/+ update() : void/
/+ draw() : void/

/+ collision() : void/

/+ destroy() : void/

+ getPosition() : Vector2D
+ getVelocity() : Vector2D
+ getWidth() : int
+ getHeight() : int
+ getMapId() : string
+ getCollisionRects() : vector&lt;ObjectRectangle&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1840</x>
      <y>468</y>
      <w>36</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1680</x>
      <y>444</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>548</x>
      <y>724</y>
      <w>108</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>Vector2D
--
- m_xComponent : float
- m_yComponent : float
--
+ normalize() : Vector2D

+ getX() : const float
+ getY() : const float
+ getLength() : const float

+ setX(x : float) : void
+ setY(x : float) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1392</x>
      <y>88</y>
      <w>160</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
InputHandler
--
- m_aKeyboardState : const Uint8*
- m_pMousePosition : Vector2D*
- m_mouseButtonState : vector&lt;bool&gt;
--
- onKeyDown() : void
- onKeyUp() : void
- onMouseMotion(const SDL_Event&amp;) : void
- onMouseButtonDown(const SDL_Event&amp;) : void
- onMouseButtonUp(const SDL_Event&amp;) : void

+ handleInput() : void

+ isKeyDown(SDL_Scancode) : bool
+ getMousePosition() : Vector2D

+ getMouseButtonState() : vector&lt;bool&gt;

+ getLeftMouseButtonState() : bool
+ getMiddleMouseButtonState() : bool
+ getRightMouseButtonState() . bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1392</x>
      <y>56</y>
      <w>56</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>548</x>
      <y>664</y>
      <w>76</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Fps
--
- fps : float
- frameTime : float 
--
+ calculateFPS() : void

+ getFPS() : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>352</x>
      <y>296</y>
      <w>104</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>bg=blue
letztere Methode sieht so komisch aus, 
weil als Parameter ein Pointer auf eine
Funktion übergeben wird</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1444</x>
      <y>656</y>
      <w>668</w>
      <h>352</h>
    </coordinates>
    <panel_attributes>Environment
--
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1468</x>
      <y>680</y>
      <w>184</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Map 
--
- m_width : int
- m_height : int
- m_tilewidth : int
- m_tileheight : int
- m_positionVector : Vector2D
- m_layerMap : map&lt;string, Layer*&gt;
--
+ init(params : const ParamLoader&amp;, tilewidth : int, tileheight: int) : void
+ update() : void
+ render() : void

+ addLayer(name : string, pNewLayer : Layer*) : void 

+ getCollisionLayer : TileLayer*
+ getObjectLayer : ObjectLayer*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1768</x>
      <y>744</y>
      <w>84</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>/Layer/
--
# m_positionVector : Vector2D
--
/+ update() : void/
/+ render() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1496</x>
      <y>844</y>
      <w>256</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>ObjectLayer
--
- m_gameObjects : vector&lt;GameObject*&gt;
- m_player : Player

- m_pCollisionLayers : vector&lt;TileLayer*&gt;*
--
+ init(pGameObjects : vector&lt;GameObject*&gt;*) : void
+ update() : void
+ render() : void

+ addCollisionLayer(pCollisionLayer : TileLayer*) : void

+ getGameObjects() : vector&lt;GameObject*&gt;*

- objectTileCollision(pGameObject : GameObject*) : void
- rectRectCollisonX(pLayer : TileLayer*, rectVector : Vector2D, collisonRect : ObjectRectangle) : bool
- rectRectCollisonY(pLayer : TileLayer*, rectVector : Vector2D, collisonRect : ObjectRectangle) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1652</x>
      <y>776</y>
      <w>132</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1772</x>
      <y>844</y>
      <w>164</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>TileLayer
--
- m_tilesets : vector&lt;Tileset&gt;
- m_tiles : vector&lt;vector&lt;Tile*&gt;&gt;
--
+ init(tilesets : vector&lt;Tileset&gt;, tiles : vector&lt;vector&lt;Tile*&gt;&gt;) : void
+ update() : void
+ render() : void

+ getTileIdAtPosition(positionVector : const Vector2D&amp;) : int
+ getTilesets() : vector&lt;Tileset&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1812</x>
      <y>776</y>
      <w>12</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1956</x>
      <y>844</y>
      <w>132</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>AnimationLayer
--
- m_animations : vector&lt;Animation*&gt;
--
+ init(pAnimations : vector&lt;GameObject*&gt;&amp;) : void
+ update() : void
+ render() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1844</x>
      <y>776</y>
      <w>140</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1904</x>
      <y>684</y>
      <w>124</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>Tile
--
- m_tileID : int
- m_positionVector : Vector2D
- m_message : string

- m_width : int
- m_height : int
--
+ load(parameters : const ParamLoader*) : void
+ update() : void
+ draw() : void

+ getTileID() : int
+ getMessage() : string
+ getHeight() : int
+ getWidth() : int
+ getPositionVector() : Vector2D  </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1568</x>
      <y>348</y>
      <w>164</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
GameObjectFactory
--
- m_creatorMap : map&lt;string, BaseCreator*&gt;
--
+ registerType(id : string, pCreator : BaseCreator*, ) : void
+ create(ìd : string) : GameObject*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1896</x>
      <y>348</y>
      <w>104</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>/BaseCreator/
--
--
+ createGameObject() : GameObject*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1728</x>
      <y>368</y>
      <w>180</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1348</x>
      <y>252</y>
      <w>248</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>StateParser
--
_- hasLoadedTextures : bool_
--
_+ parse(filename : string, pObjects : vector&lt;GameObject*&gt;*, stateID : GameStateID) : bool_
_- loadTextures(pTextureNode : XMLElement*) : bool_
_- loadGameObjects(pCurrentStateNode : XMLElement*, pObjects : vector&lt;GameObject*&gt;*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1956</x>
      <y>552</y>
      <w>12</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1568</x>
      <y>476</y>
      <w>116</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Animation
--
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1680</x>
      <y>492</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1604</x>
      <y>252</y>
      <w>380</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>MapParser
--
--
_+ parse(filename : string, pMapDict : map&lt;string, Map*&gt;&amp;, pMapStack : Stack&lt;Map*&gt;&amp;, pObjects : vector&lt;GameObject*&gt;, stateID : GameStateID) : bool_
_- parseMap(path : string, pMap : Map*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>596</x>
      <y>204</y>
      <w>56</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1016</x>
      <y>816</y>
      <w>80</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>HowToPlayState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- backToMenu() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1040</x>
      <y>780</y>
      <w>112</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>260.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1568</x>
      <y>528</y>
      <w>116</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Buttton
--
- m_callbackId : string
- m_callbackFunction : void(*)()
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void

+ getCallbackId() : string

+ setCallback(callback : void(*)()) : void
+ setCallbackId(callbackId : string) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1680</x>
      <y>540</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1960</x>
      <y>600</y>
      <w>96</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>TODO: Vererbung implementieren
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>164</x>
      <y>396</y>
      <w>148</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Camera
--
- m_positionVector : Vector2D
- m_cameraWidth : int
- m_cameraHeight : int
- m_pCenterObject : SDL_GameObject*
--
+ centerOnGameObject(object : SDL_GameObject*) : void
+ move(vector : Vector2D) : void
+ update() : void

+ getPositionVector() : Vector2D
+ getCameraWidth() : int 
+ getCameraHeight() : int

+ setPositionVector(vector : Vector2D) : void
+ setCameraWidth(cameraWidth : int) : void
+ setCameraHeight(cameraHeight : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>404</x>
      <y>652</y>
      <w>132</w>
      <h>164</h>
    </coordinates>
    <panel_attributes>ObjectRectangle
--
+ positionVector : Vector2D
+ width : int
+ height : int

- m_visible : bool
- m_color : SDL_Color
- m_rectAttributes : string
- m_showText : bool
- m_font : TTF_Font*
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void

+ getX() : float
+ getY() : float
+ getWidth() : int
+ getHeight() : int
+ getShowText() : bool
+ getVisible() : bool

+ setColor(r : int, g : int, b: int, alpha : int) : void
+ setShowText(b : bool) : void
+ setVisible(b : bool) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>160</y>
      <w>84</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>FontManager
--
- m_characterMap : map&lt;char, 
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>676</y>
      <w>120</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>UniqueIdGenerator
--
_- m_currentTopNumber : unsigned long long_
--
_+ newID() : unsigned long long_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>160</y>
      <w>172</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
ScriptManager
--
- m_isInit : bool
- m_pLuaState : lua_State*
- m_pScriptMap : map&lt;string, Script*&gt;*
--
+ init() : bool
+ getScriptFromId(id : string ) : Script&amp; 
+ callFunction(table : const char*, func : const char*) : void
+ getLuaState() : lua_State*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1188</x>
      <y>272</y>
      <w>152</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>ScriptLoader
--
--
_+ luadScripts(filename : const char*) : map&lt;string, string&gt;*_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>244</x>
      <y>716</y>
      <w>148</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Script
--
- m_pLuaState : lua_State*
- m_scriptId : string
- m_tableReference : int
--
+ destroy() : void
+ callFunction(func : const char*) : void 

+ getScriptId() : string
+ getStringFromTable(name : const char*) : string
+ getIntFromTable(name : const char*) : int
+ getBoolFromTable(name : const char*) : bool

+ setScriptId(s : string) : void
+ setTableReference(ref : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
