<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>328</y>
      <w>488</w>
      <h>784</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
Game
--
- m_pWindow : SDL_Window*
- m_pRenderer : SDL_Renderer*

- m_pCamera : Camera*

- m_pStateMachine : GameStateMachine*

- m_pStory : Story*

- m_pItemList : ItemList*

- m_pNotebook : Notebook*

- m_pClock : Clock*

- m_pStandardLog : Logger*
- m_pErrorLog : Logger*

- m_running : bool
- m_gameWidth : int
- m_gameHeight : int
- m_gameXPos : int
- m_gameYPos : int

- m_pCurrentState : GameState*

- isChangeState : bool
- isPushState : bool
- isPopState : bool
--
+ init (title : string, width : int, height : int, xPos : int, yPos : int, flags : int) : bool
+ handleInput() : void
+ update() : void
+ render() : void
+ saveGame() : void
+ resize(changeSize : bool) : void
+ setGameOver() : void
+ emergenceyExit(message : const char*)

+ changeState(newState : GameState*) : void
+ pushState(newState : GameState*) : void
+ popState() : void

+ getWindow() : SDL_Window*
+ getRenderer() : SDL_Renderer*
+ getCamera() : Camera*
+ isRunning() : bool
+ getGameWidth() : int
+ getGameHeight() : int
+ getGameXPos() : int
+ getGameYPos() : int
+ getCurrentState() : GameState*
+ getStory() : Story*
+ getItemList() : ItemList*
+ getNotebook() : Notebook*
+ getClock() : Clock*

+ logStandard() : Logger&amp;
+ logError() : Logger&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1784</x>
      <y>1272</y>
      <w>280</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>/GameState/
--
# m_stateID : GameStateID
# m_mapDict : map&lt;string, Map*&gt;
# m_maps : Stack&lt;Map*&gt;
# m_dialog : Dialog
# m_callbackFunctions : map&lt;string, void(*)()&gt;
--
/+ onEnter() : void/
/+ onExit() : void/

/+ handleInput() : void/
/+ update() : void/
/+ render() : void/

+ getStateID() : GameStateID
+ getCurrentMap() : Map*
+ getMapDict() : map&lt;string, Map*&gt;
+ getDialog() : Dialog*
+ getMapStack() : Stack&lt;Map*&gt;*
+ getCurrentMapId() : string

+ pushMap(mapId : string) : void 
+ popMap() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1672</x>
      <y>160</y>
      <w>160</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2088</x>
      <y>1272</y>
      <w>96</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
GameStateID
--
menuState
playState
pauseState
howToPlayState
inventoryState
notebookState
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1288</x>
      <y>1240</y>
      <w>1072</w>
      <h>728</h>
    </coordinates>
    <panel_attributes>FiniteStateMachine
--
bg=orange
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1328</x>
      <y>1288</y>
      <w>240</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>GameStateMachine
--
- m_stateStack : Stack&lt;GameState&gt;
--
+ handleInput() : void
+ update() : void
+ render() : void

+ pushState(newState : GameState*) : void
+ popState() : void
+ changeState(newState : GameState*) : void

+ getCurrentState() : GameState*
+ getPreviousState() : GameState*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1696</x>
      <y>1616</y>
      <w>160</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>MenuState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- menuToPlay() : void_
_- menuToHowToPlay() : void_
_- exit() : void_
_- resize() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1776</x>
      <y>1560</y>
      <w>144</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2184</x>
      <y>1616</y>
      <w>160</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>PauseState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- resumePlay() : void_
_- save() : void_
_- playToMenu() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1864</x>
      <y>1616</y>
      <w>120</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>PlayState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1912</x>
      <y>1560</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1968</x>
      <y>1560</y>
      <w>328</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>872</y>
      <w>112</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1848</x>
      <y>872</y>
      <w>136</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2128</x>
      <y>760</y>
      <w>240</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
successor
m1=1
m2=0,1</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0;220.0;290.0;190.0;290.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3336</x>
      <y>840</y>
      <w>264</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>/GameObject/
--
# m_uniqueId : string
# m_isVisible : bool 
--
/+ load(parameters : const ParamLoader&amp;) : void/
/+ update() : void/
/+ draw(layerPosition : const Vector2D$) : void/

/+ collision() : void/
/+ onCreate() : void/
/+ interact(pPlayer : Player*) : void/

+ getUniqueId() : string
+ isVisible() : bool

+ setVisibility(b : bool) : void

/+ destroy() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>448</y>
      <w>320</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Logger
--
- m_outputStream : ostream*
- m_heap : bool
--
+ operator&lt;&lt;(msg : T) : Logger&amp;
+ operator&lt;&lt;((*f)(std::ostream&amp;) : std::ostream&amp;) : std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>464</y>
      <w>192</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=2
m2=1
has</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1248</x>
      <y>584</y>
      <w>160</w>
      <h>720</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
controls</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0;180.0;880.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1568</x>
      <y>640</y>
      <w>792</w>
      <h>568</h>
    </coordinates>
    <panel_attributes>DataStructure
--
bg=green
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1784</x>
      <y>744</y>
      <w>112</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
topNode
m1=1</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1560</x>
      <y>880</y>
      <w>136</w>
      <h>456</h>
    </coordinates>
    <panel_attributes>lt=&lt;-



has
m1=1
m2=1
</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;540.0;10.0;540.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1888</x>
      <y>600</y>
      <w>200</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Der Stapel wurde als 
Klassen-Template implementiert
Für weitere Erklärungen siehe Code.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1592</x>
      <y>704</y>
      <w>208</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>template=T
Stack
--
- m_pTopNode : StackElement&lt;T&gt;*
--
+ push(pNewNodeData : T*) : void	
+ pop() : void
+ clear() : void

+ size() : int 
+ empty() : bool

+ at(index : int) : T&amp;
+ getTopNodeData() : T&amp;
+ operator[](index : int) : T&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1880</x>
      <y>720</y>
      <w>264</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>template=T
/StackElement/
--
--
/+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*/
/+ size() : int/

/+ getElement(int) : StackElement&lt;T&gt;*/
/+ getSuccessor() : StackElement&lt;T&gt;*/
/+ getData() : T&amp;/

/+ destroy() : void/
/+ destroyAll() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1688</x>
      <y>912</y>
      <w>264</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>template=T
Closure
--
--
+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*
+ size() : int

+ getElement(index : int) : StackElement&lt;T&gt;*
+ getSuccessor() : StackElement&lt;T&gt;*
+ getData() : T&amp;

+ destroy() : void
+ destroyAll() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1976</x>
      <y>912</y>
      <w>312</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>template=T
Node
--
- m_pSuccessor : StackElement&lt;T&gt;*
- m_pData : T*
--
+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*
+ size() : int

+ getElement(index : int) : StackElement&lt;T&gt;*
+ getSuccessor() : StackElement&lt;T&gt;*
+ getData() : T&amp;

+ setSuccessor(pNewSuccessor : StackElement&lt;T&gt;*) : void

+ destroy() : void
+ destroyAll() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2928</x>
      <y>432</y>
      <w>256</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Player 
--
- m_interactRects : vector&lt;ObjectRectangle&gt;
--
- interactCollision() : GameObject*
- loadScript() : void

+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw(layerPosition : const Vector2D&amp;) : void

+ collision() : void
+ onCreate() : void

+ setPosition(x : float, y : float) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2976</x>
      <y>648</y>
      <w>320</w>
      <h>632</h>
    </coordinates>
    <panel_attributes>SDL_GameObject
--
# m_objectRect : ObjectRectangle
# m_collisionRects : vector&lt;ObjectRectangle&gt;
# m_currentRow : int
# m_currentCol : int
# m_numCols : int
# m_numRows : int
# m_animSpeed : int
# m_velocity : Vector2D
# m_textureId : string
# m_mapId : string
# m_pCommands : CommandQueue*

/# loadScript() : void/
--
/+ load(parameters : const ParamLoader&amp;) : void/
/+ update() : void/
/+ draw() : void/

/+ collision() : void/
/+ onCreate() : void/
/+ interact(pPlayer : void) : void/

/+ moveToPosition(v : Vector2D) : void/
/+ moveRelative(v : Vector2D) : void/
/+ stun(sec : float) : void/

/+ pushCommand(pCommand : BaseCommand*)/
/+ popCommand() : void/

/+ destroy() : void/

+ getPosition() : Vector2D
+ getVelocity() : Vector2D
+ getWidth() : int
+ getHeight() : int
+ getTextureId() : string
+ getMapId() : string
+ getCollisionRects() : vector&lt;ObjectRectangle&gt;
+ getCommands() : CommandQueue*
+ getCurrentCommand() : BaseCommand*

+ setVelocity(v : Vector2D) : void
+ addCollisionRects(cRects : vector&lt;ObjectRectangle&gt;) : void
+ setCurrentRow(row : int) : void
+ setCurrentCol(col : int) : void
+ setWidth(width : int) : void
+ setHeight(height : int) : void
/+ setPosition(x : float, y : float) : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3288</x>
      <y>840</y>
      <w>64</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2976</x>
      <y>608</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>1248</y>
      <w>216</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Vector2D
--
- m_xComponent : float
- m_yComponent : float
--
+ normalize() : Vector2D

+ getX() : const float
+ getY() : const float
+ getLength() : const float

+ setX(x : float) : void
+ setY(x : float) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2368</x>
      <y>64</y>
      <w>320</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
InputHandler
--
- m_aKeyboardState : const Uint8*
- m_pMousePosition : Vector2D*
- m_mouseButtonState : vector&lt;bool&gt;
--
- onKeyDown() : void
- onKeyUp() : void
- onMouseMotion(event : const SDL_Event&amp;) : void
- onMouseButtonDown(event :_const SDL_Event&amp;) : void
- onMouseButtonUp(event : const SDL_Event&amp;) : void

+ handleInput() : void

+ isKeyDown(SDL_Scancode) : bool
+ getMousePosition() : Vector2D

+ getMouseButtonState() : vector&lt;bool&gt;

+ getLeftMouseButtonState() : bool
+ getMiddleMouseButtonState() : bool
+ getRightMouseButtonState() . bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2760</x>
      <y>24</y>
      <w>160</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>1144</y>
      <w>152</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Fps
--
- fps : float
- frameTime : float 
--
+ calculateFPS() : void

+ getFPS() : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>280</x>
      <y>528</y>
      <w>208</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=blue
letztere Methode sieht so komisch aus, 
weil als Parameter ein Pointer auf eine
Funktion übergeben wird</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2448</x>
      <y>1288</y>
      <w>1336</w>
      <h>680</h>
    </coordinates>
    <panel_attributes>Environment
--
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2488</x>
      <y>1344</y>
      <w>368</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Map 
--
- m_width : int
- m_height : int
- m_tilewidth : int
- m_tileheight : int
- m_positionVector : Vector2D
- m_pCenterObject : SDL_GameObject*
- m_layerMap : map&lt;string, Layer*&gt;
--
+ init(params : const ParamLoader&amp;, tilewidth : int, tileheight: int) : void
+ update() : void
+ render() : void

+ addLayer(name : string, pNewLayer : Layer*) : void 

+ getWidth() : int
+ getHeight() : int 
+ getCollisionLayer() : TileLayer*
+ getObjectLayer() : ObjectLayer*
+ getCenterObject : SDL_GameObject*

+ setCenterObject(pObject : SDL_GameObject*) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3048</x>
      <y>1472</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Layer/
--
# m_positionVector : Vector2D
--
/+ update() : void/
/+ render() : void/

+ getPosition() : Vector2D

+ setPosition(newPosiotion : Vector2D&amp;) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>1656</y>
      <w>512</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>ObjectLayer
--
- m_gameObjects : vector&lt;GameObject*&gt;

- m_pCollisionLayers : vector&lt;TileLayer*&gt;*
--
+ init(pGameObjects : vector&lt;GameObject*&gt;*) : void
+ update() : void
+ render() : void

+ addCollisionLayer(pCollisionLayer : TileLayer*) : void

+ getGameObjects() : vector&lt;GameObject*&gt;*

- objectTileCollision(pGameObject : GameObject*) : void
- rectRectCollisonX(pLayer : TileLayer*, rectVector : Vector2D, collisonRect : ObjectRectangle) : bool
- rectRectCollisonY(pLayer : TileLayer*, rectVector : Vector2D, collisonRect : ObjectRectangle) : bool
- objectObjectCollision(pMovingObjects : std::vector&lt;GameObject*&gt;*) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2872</x>
      <y>1584</y>
      <w>208</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>240.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3112</x>
      <y>1656</y>
      <w>328</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>TileLayer
--
- m_tilesets : vector&lt;Tileset&gt;
- m_tiles : vector&lt;vector&lt;Tile*&gt;&gt;
--
+ init(tilesets : vector&lt;Tileset&gt;, tiles : vector&lt;vector&lt;Tile*&gt;&gt;) : void
+ update() : void
+ render() : void

+ getTileIdAtPosition(positionVector : const Vector2D&amp;) : int
+ getTilesets() : vector&lt;Tileset&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3192</x>
      <y>1584</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3488</x>
      <y>1656</y>
      <w>264</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>AnimationLayer
--
- m_animations : vector&lt;GameObject*&gt;
--
+ init(pAnimations : vector&lt;GameObject*&gt;&amp;) : void
+ update() : void
+ render() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3256</x>
      <y>1584</y>
      <w>288</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3384</x>
      <y>1344</y>
      <w>248</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Tile
--
- m_tileID : int
- m_positionVector : Vector2D
- m_message : string

- m_width : int
- m_height : int
--
+ load(parameters : const ParamLoader*) : void
+ update() : void
+ draw() : void

+ getTileID() : int
+ getMessage() : string
+ getHeight() : int
+ getWidth() : int
+ getPositionVector() : Vector2D  </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3336</x>
      <y>688</y>
      <w>328</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
GameObjectFactory
--
- m_creatorMap : map&lt;string, BaseCreator*&gt;
--
+ registerType(id : string, pCreator : BaseCreator*, ) : void
+ create(ìd : string) : GameObject*
+ typeExists(id : string) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3744</x>
      <y>712</y>
      <w>208</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>/BaseCreator/
--
--
+ createGameObject() : GameObject*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3656</x>
      <y>728</y>
      <w>104</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4072</x>
      <y>40</y>
      <w>496</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>StateParser
--
_- hasLoadedTextures : bool_
--
_+ parse(filename : string, pObjects : vector&lt;GameObject*&gt;*, stateID : GameStateID) : bool_
_- loadTextures(pTextureNode : XMLElement*) : bool_
_- loadGameObjects(pCurrentStateNode : XMLElement*, pObjects : vector&lt;GameObject*&gt;*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2672</x>
      <y>888</y>
      <w>240</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Animation
--
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2904</x>
      <y>920</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3272</x>
      <y>40</y>
      <w>768</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>MapParser
--
--
_+ parse(filename : string, pMapDict : map&lt;string, Map*&gt;&amp;, pMapStack : Stack&lt;Map*&gt;&amp;, pObjects : vector&lt;GameObject*&gt;, stateID : GameStateID) : bool_
_- parseMap(path : string, pMap : Map*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>768</x>
      <y>256</y>
      <w>160</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1528</x>
      <y>1616</y>
      <w>160</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>HowToPlayState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- backToMenu() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1576</x>
      <y>1560</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>340.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2672</x>
      <y>984</y>
      <w>240</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Buttton
--
- m_callbackId : string
- m_callbackFunction : void(*)()
- m_fixCol
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void

+ getCallbackId() : string

+ setCallback(callback : void(*)()) : void
+ setCallbackId(callbackId : string) : void
+ lockOnCol(col : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2904</x>
      <y>1008</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>416</x>
      <y>880</y>
      <w>304</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>Camera
--
- m_positionVector : Vector2D
- m_cameraWidth : int
- m_cameraHeight : int
- m_pCenterObject : SDL_GameObject*
--
+ centerOnGameObject(object : SDL_GameObject*) : void
+ move(vector : Vector2D) : void
+ update() : void

+ getPositionVector() : Vector2D
+ getCameraWidth() : int 
+ getCameraHeight() : int
+ getCenterObject() : SDL_GameObject*

+ setPositionVector(vector : Vector2D) : void
+ setCameraWidth(cameraWidth : int) : void
+ setCameraHeight(cameraHeight : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4008</x>
      <y>680</y>
      <w>264</w>
      <h>328</h>
    </coordinates>
    <panel_attributes>ObjectRectangle
--
+ positionVector : Vector2D
+ width : int
+ height : int

- m_visible : bool
- m_color : SDL_Color
- m_rectAttributes : string
- m_showText : bool
- m_font : TTF_Font*
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void

+ getX() : float
+ getY() : float
+ getWidth() : int
+ getHeight() : int
+ getShowText() : bool
+ getVisible() : bool

+ setColor(r : int, g : int, b: int, alpha : int) : void
+ setShowText(b : bool) : void
+ setVisible(b : bool) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1376</x>
      <y>216</y>
      <w>280</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
FontManager
--
- m_characterMap : map&lt;char, Vector2D&gt;

- m_height : int
- m_width : int
--
+ parseFont() : void
+ drawCharacter(character : char, x : int, y : int) : void
+ drawText(text : string, x : int, y : int) : void 
+ drawTextBox(text : string, textBox : ObjectRectangle) : void

+ getCharWidth() : int
+ getCharHeight() : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>1064</y>
      <w>240</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>UniqueIdGenerator
--
_- m_currentTopNumber : unsigned long long_
--
_+ newID() : unsigned long long_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2760</x>
      <y>88</y>
      <w>344</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
ScriptManager
--
- m_isInit : bool
- m_pLuaState : lua_State*
- m_pScriptMap : map&lt;string, Script*&gt;*
-m_registrations : vector&lt;BaseLuaRegistration*&gt;
--
+ init() : bool
+ getScriptById(id : string ) : Script&amp; 
+ removeScriptFromMap(id : string) : void
+ callFunction(table : const char*, func : const char*) : void
+ addRegistration(reg : BaseLuaRegistration*) : void

+ getLuaState() : lua_State*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2760</x>
      <y>304</y>
      <w>344</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>ScriptLoader
--
--
_+ loadScripts(filename : const char*) : map&lt;string, string&gt;*_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1448</y>
      <w>368</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>Script
--
- m_pLuaState : lua_State*
- m_scriptId : string
- m_tableReference : int
--
+ destroy() : void
+ pushTable() : bool
+ callFunction(func : const char*) : void 
+ pushArgumentMetatable(pObject : void*, type : OBJECT_TYPE) : void
+ pushArgumentString(arg : const char*) : void
+ callVoidWithArgs(func : const char*, numArgs : int) : void
+ callString(func : const char*) : string

+ getScriptId() : string
+ getTableReference() : int
+ getStringFromTable(name : const char*) : string
+ getIntFromTable(name : const char*) : int
+ getBoolFromTable(name : const char*) : bool

+ setScriptId(s : string) : void
+ setTableReference(ref : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>472</x>
      <y>1448</y>
      <w>704</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>LuaRegistrations
--
bg=blue
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1496</y>
      <w>496</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>/BaseLuaRegistration/
--
# registerMetatable(name : const char*, pLuaState : lua_State*, pRegs : const luaL_Reg*) : void

/+ registerToLua(pLuaState : lua_State*)/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2848</x>
      <y>1464</y>
      <w>216</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
has 
m2=1
m1=n</panel_attributes>
    <additional_attributes>250.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3664</x>
      <y>840</y>
      <w>200</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>Dialog
--
- m_rect : ObjectRectangle
- m_textBox : ObjectRectangle
- m_boxTextureId : string
- m_message : vector&lt;string&gt;

- m_lineFinished : bool
- m_isVisible : bool
--
+ update() : void
+ draw() : void

+ isVisible() : bool

+ addMessage(text : string) : void
+ setSize(width : int, height : int) : void
+ setPosition(x : int, y : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2672</x>
      <y>688</y>
      <w>264</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>NPC
--
--
- loadScript() : void

+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw(layerPosition : const Vector2D&amp;) : void

+ collision() : void
+ onCreate() : void
+ interact(pPlayer : Player*) : void

+ turnToObject(pObject : SDL_GameObject*) : void

+ setTextureId(id : string) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2928</x>
      <y>792</y>
      <w>64</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3272</x>
      <y>160</y>
      <w>336</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>CollisionRectParser
--
--
_parse(filename : string, pObjects : vector&lt;GameObject*&gt;*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3648</x>
      <y>160</y>
      <w>456</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>StoryParser
--
--
_+ parseStory(pQuestList : vector&lt;pair&lt;string, vector&lt;string&gt;&gt;&gt;, filename : const char*) : void_

_+ saveGame(filename : const char*, pPlayState : GameState*) : bool_

_+ loadGame(filename : const char*, pPlayState : GameState*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2368</x>
      <y>0</y>
      <w>160</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>496</x>
      <y>1608</y>
      <w>592</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Es erben "GameLuaRegistration", "NPCLuaRegistration", "ButtonLuaRegistration",
"SDL_ObjectLuaRegistration" und "PlayerLuaRegistration".
In diesen Klassen wird "registerToLua()" überschrieben und es werden die zu registrierenden Methoden fesgehalten.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>472</x>
      <y>1720</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>BaseCommand
--
# m_type : COMMAND_TYPE
# m_done : bool
--
/+ update(object : SDL_GameObject&amp;) : void/

+ getType() : COMMAND_TYPE
+ isDone() : bool

+ setDone() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>1552</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>1720</y>
      <w>288</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>CommandQueue
--
- m_commandList : list&lt;BaseCommand*&gt;
- m_objectRef : SDL_GameObject&amp;
--
+ update() : void
+ pushCommand(pCommand : BaseCommand*) : void
+ popCommand() : void

+ isEmpty() : bool
+ getCurrentCommand() : BaseCommand* </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>464</x>
      <y>1880</y>
      <w>592</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Es erben "DialogCommand", "MoveCommand" und "StunCommand".
In diesen Klassen wird "update()" überschrieben, sodass das übergeben Objekt den gewünschten Befehl ausführt.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>1832</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1376</x>
      <y>160</y>
      <w>160</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>416</x>
      <y>640</y>
      <w>304</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>Story
--
- m_questList : vector&lt;pair&lt;string, vector&lt;string&gt;&gt;&gt;
- m_currentMainQuest : string
- m_currentPartQuest : string

- m_delay : int
- m_requestNextQuest : bool
--
- nextQuestExevut() : void

+ init() : void
+ update() : void
+ nextQuest() : void
+ nextQuestDelay(delay : int) : void

+ getMainQuest() : string
+ getPartQuest() : string

+ setQuest(mainQuest : string, partQuest : string) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4152</x>
      <y>1144</y>
      <w>224</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Item
--
- m_id : string
- m_itemName : string
- m_textureId : string
- m_scriptId : string
- m_isActive : bool
--
+ draw(v : Vector2D, num : int) : void

+ getId() : string
+ getItemName() : string
+ getTextureId() : string
+ getScriptId() : string

+ setId(id : string) : void
+ setItemName(itemName : string) : void
+ setTextureId(textureId : string) : void
+ setScriptId(scriptId : string) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3888</x>
      <y>1144</y>
      <w>224</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>ItemList
--
- m_rect : ObjectRectangle
- m_itemMap : map&lt;string, Item&gt;
- m_items: vector&lt;pair&lt;Item*, int&gt;&gt;
--
+ loadItems() : void
+ addItem(id : string, num : int) : void
+ removeItem(id : string, num : int) : void
+ clear() : void

+ align() : void
+ update() : void
+ draw() : void

+ getItems() : vector&lt;pair&lt;Item*, int&gt;&gt;
+ isInList(id : string) : bool
+ getItemCount(id : string) : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3888</x>
      <y>1416</y>
      <w>328</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Clock
--
- m_rect : ObjectRectangle
- m_timeInSeconds : int
- m_textureId : const char*
- m_isVisible : bool

- m_desiredTimeInSeconds : int
- m_handVelocity : double

- m_secondsHand, m_minutesHand, m_hoursHand : ClockHand
- m_tinyDisplayRect : ObjectRectangle
- m_tinyDisplay : double
- m_tinyDisplayTextureId : const char*
- m_desiredTinyDisplay : int
- m_displayVelocity : double
--
+ init() : void
+ update() : void
+ draw() : void

+ addTime(seconds : int, velocity : double) : void
+ addTinyDisplayTime(hours : int, velocity : double) : void

+ getTimeInSeconds() : int
+ getTinyDisplayTimeInHours() : int

+ setTime(timeInSeconds : int) : void
+ setVisible(v : bool) : void
+ setTinyDisplayTime (timeInHours : int) : void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3224</x>
      <y>432</y>
      <w>240</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Door
--
--
- loadScript() : void

+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw(layerPosition : const Vector2D&amp;) : void

+ collision() : void
+ onCreate() : void
+ interact(pPlayer : Player*) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3336</x>
      <y>632</y>
      <w>160</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3888</x>
      <y>1744</y>
      <w>328</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Notebook
--
- m_rect : ObjectRectangle
- m_pages : vector&lt;Page&gt;
- m_textureId : string
- m_currentLeftPage : int
--
+ update() : void
+ draw() : void
+ browseRight() : void
+ browseLeft() : void
+ clear() : void

+ getPages() : vector&lt;Page&gt;

+ align() : void
+ addNote(text : string) : void
+ cornelius(b : bool) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4240</x>
      <y>1744</y>
      <w>224</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>Page
--
- m_rect : ObjectRectangle
- m_lineRects : vector&lt;ObjectRectangle&gt;
- m_lineTexts : vector&lt;string&gt;

- m_isFull : bool
- m_lineNumber : int
--
+ draw() : void
+ clear() : void

+ isFull() : bool
+ getLines() : vector&lt;string&gt;

+ addText(text : string) : void
+ setPosition(x : int, y : int) : void
+ setSize(width : int, height : int) : void
+ setIsFull(b : bool) : void
+ setLineNumber(line : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3248</x>
      <y>576</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1992</x>
      <y>1616</y>
      <w>184</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>IngameState
--
# m_mapId : const char*
# m_scriptId : const char*
--
# takeScreenshot() : GameObject*

/+ onEnter() : void/
/+ onExit() : void/

/+ handleInput(): void/
/+ update() : void/
/+ render() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2104</x>
      <y>1824</y>
      <w>120</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>InventoryState
--
--
+ onEnter() : void
+ onExit() : void

+ handleInput(): void
+ update() : void 
+ render() : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1976</x>
      <y>1824</y>
      <w>112</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>NotebookState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1928</x>
      <y>1560</y>
      <w>168</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2016</x>
      <y>1768</y>
      <w>72</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2088</x>
      <y>1768</y>
      <w>88</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1672</x>
      <y>216</y>
      <w>664</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
TextureManager
--
- m_textureMap : map&lt;string, SDL_Texture*&gt;
--
+ load(id : string, path : string, pRenderer : SDL_Renderer*) : bool

+ draw(id : string, x : int, y : int, width : int, height : int) : void
+ drawFrame(id : string, x : int, y : int, width : int, height : int, frameRow: int, frameCol : int) : void
+ drawScaledFrame(id : string, x : int, y : int, width : int, height: int, frameRow : int, frameCol : int, numRows : int, numCols : int) : void 
+ drawTile(tileset : Tileset&amp;, tileId : int, x : int, y : int) : void

+ clearFromTextureMap(id : string) : void
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
