<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1230</x>
      <y>440</y>
      <w>610</w>
      <h>710</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
Game
--
- m_pWindow : SDL_Window*
- m_pRenderer : SDL_Renderer*

- m_pStateMachine : GameStateMachine*

- m_pStandardLog : Logger*
- m_pErrorLog : Logger*

- m_running : bool
- m_gameWidth : int
- m_gameHeight : int
- m_gameXPos : int
- m_gameYPos : int

- m_pCurrentState : GameState*

- isChangeState : bool
- isPushState : bool
- isPopState : bool
--
+ init (title : string, width : int, height : int, xPos : int, yPos : int, flags : int) : bool
+ handleInput() : void
+ update() : void
+ render() : void
+ setGameOver() : void
+ emergenceyExit(message : const char*)

+ changeState(newState : GameState*) : void
+ pushState(newState : GameState*) : void
+ popState() : void

+ getWindow() : SDL_Window*
+ getRenderer() : SDL_Renderer*
+ isRunning() : bool
+ getGameWidth() : int
+ getGameHeight() : int
+ getGameXPos() : int
+ getGameYPos() : int


+ logStandard() : Logger&amp;
+ logError() : Logger&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2520</x>
      <y>1580</y>
      <w>300</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>/GameState/
--
# m_stateID : GameStateID
# m_mapDict : map&lt;string, Map*&gt;
# m_maps : Stack&lt;Map&gt;
# m_callbackFunctions : map&lt;string, void(*)()&gt;
--
/+ onEnter() : void/
/+ onExit() : void/

/+ handleInput() : void/
/+ update() : void/
/+ render() : void/

/+ getStateID() : GameStateID/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2590</x>
      <y>190</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2880</x>
      <y>1540</y>
      <w>120</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
GameStateID
--
menuState
playState
pauseState
howToPlayState
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1880</x>
      <y>1490</y>
      <w>1340</w>
      <h>660</h>
    </coordinates>
    <panel_attributes>FiniteStateMachine
--
bg=orange
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1930</x>
      <y>1550</y>
      <w>290</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>GameStateMachine
--
- m_stateStack : Stack&lt;GameState&gt;
--
+ handleInput() : void
+ update() : void
+ render() : void

+ pushState(newState : GameState*) : void
+ popState() : void
+ changeState(newState : GameState*) : void

+ getCurrentState() : GameState*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2490</x>
      <y>1900</y>
      <w>200</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>MenuState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- menuToPlay() : void_
_- menuToHowToPlay() : void_
_- exit() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2590</x>
      <y>1810</y>
      <w>70</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2860</x>
      <y>1900</y>
      <w>200</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>PauseState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- resumePlay() : void_
_- playToMenu() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2700</x>
      <y>1900</y>
      <w>150</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>PlayState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2660</x>
      <y>1810</y>
      <w>130</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2700</x>
      <y>1810</y>
      <w>240</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2770</x>
      <y>1000</y>
      <w>140</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2580</x>
      <y>1000</y>
      <w>170</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2930</x>
      <y>890</y>
      <w>300</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
successor
m1=1
m2=0,1</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0;220.0;290.0;190.0;290.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2590</x>
      <y>260</y>
      <w>610</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
TextureManager
--
- m_textureMap : map&lt;string, SDL_Texture*&gt;
--
+ load(id : string, path : string, pRenderer : SDL_Renderer*) : bool

+ draw(id : string, x : int, y : int, width : int, height : int) : void
+ drawFrame(id : string, x : int, y : int, width : int, height : int, frameRow: int, frameCol : int) : void
+ drawTile(tileset : Tileset&amp;, tileId : int, x : int, y : int) : void

+ clearFromTextureMap(id : string) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4410</x>
      <y>990</y>
      <w>330</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>/GameObject/
--
# m_uniqueId : unsigned long long
# m_isVisible : bool 
--
/+ load(parameters : const ParamLoader&amp;) : void/
/+ update() : void/
/+ draw() : void/

/+ collision() : void/

+ getUniqueId() : unsigned long long
+ isVisible() : bool

+ setVisibility(b : bool) : void

/+ destroy() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>620</x>
      <y>500</y>
      <w>400</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Logger
--
- m_outputStream : ostream*
- m_heap : bool
--
+ operator&lt;&lt;(msg : T) : Logger&amp;
+ operator&lt;&lt;((*f)(std::ostream&amp;) : std::ostream&amp;) : std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1010</x>
      <y>520</y>
      <w>240</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=2
m2=1
has</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>650</y>
      <w>200</w>
      <h>920</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
controls</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0;180.0;900.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2230</x>
      <y>740</y>
      <w>990</w>
      <h>710</h>
    </coordinates>
    <panel_attributes>DataStructure
--
bg=green
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2500</x>
      <y>870</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
topNode
m1=1</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2210</x>
      <y>950</y>
      <w>180</w>
      <h>660</h>
    </coordinates>
    <panel_attributes>lt=&lt;-



has
m1=1
m2=1
</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;630.0;10.0;630.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2630</x>
      <y>690</y>
      <w>250</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Der Stapel wurde als 
Klassen-Template implementiert
Für weitere Erklärungen siehe Code.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2260</x>
      <y>820</y>
      <w>260</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>template=T
Stack
--
- m_pTopNode : StackElement&lt;T&gt;*
--
+ push(pNewNodeData : T*) : void	
+ pop() : void

+ getTopNodeData : T*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2620</x>
      <y>840</y>
      <w>330</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>template=T
/StackElement/
--
--
/+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*/
/+ getSuccessor() : StackElement&lt;T&gt;*/

/+ getData() : T*/

/+ destroy() : void/
/+ destroyAll() : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2380</x>
      <y>1080</y>
      <w>330</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>template=T
Closure
--
--
+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*

+ getSuccessor() : StackElement&lt;T&gt;*
+ getData() : T*

+ destroy() : void
+ destroyAll() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2740</x>
      <y>1080</y>
      <w>390</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>template=T
Node
--
- m_pSuccessor : StackElement&lt;T&gt;*
- m_pData : T*
--
+ push(pNewNodeData : T*) : StackElement&lt;T&gt;*

+ getSuccessor() : StackElement&lt;T&gt;*
+ getData() : T*

+ setSuccessor(pNewSuccessor : StackElement&lt;T&gt;*) : void

+ destroy() : void
+ destroyAll() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3660</x>
      <y>940</y>
      <w>290</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Player 
--
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4030</x>
      <y>970</y>
      <w>320</w>
      <h>430</h>
    </coordinates>
    <panel_attributes>SDL_GameObject
--
# m_objectRect : ObjectRectangle
# m_collisionRects : vector&lt;ObjectRectangle&gt;
# m_currentRow : int
# m_currentCol : int
# m_numCols : int
# m_numRows : int
# m_animSpeed : int
# m_velocity : Vector2D
# m_textureId : string
# m_mapId : string
--
/+ load(parameters : const ParamLoader&amp;) : void/
/+ update() : void/
/+ draw() : void/

/+ collision() : void/

/+ destroy() : void/

+ getPosition() : Vector2D
+ getVelocity() : Vector2D
+ getWidth() : int
+ getHeight() : int
+ getMapId() : string
+ getCollisionRects() : vector&lt;ObjectRectangle&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4340</x>
      <y>1030</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3940</x>
      <y>970</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1110</x>
      <y>1670</y>
      <w>270</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Vector2D
--
- m_xComponent : float
- m_yComponent : float
--
+ normalize() : Vector2D

+ getX() : const float
+ getY() : const float
+ getLength() : const float

+ setX(x : float) : void
+ setY(x : float) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3220</x>
      <y>80</y>
      <w>400</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
InputHandler
--
- m_aKeyboardState : const Uint8*
- m_pMousePosition : Vector2D*
- m_mouseButtonState : vector&lt;bool&gt;
--
- onKeyDown() : void
- onKeyUp() : void
- onMouseMotion(const SDL_Event&amp;) : void
- onMouseButtonDown(const SDL_Event&amp;) : void
- onMouseButtonUp(const SDL_Event&amp;) : void

+ handleInput() : void

+ isKeyDown(SDL_Scancode) : bool
+ getMousePosition() : Vector2D

+ getMouseButtonState() : vector&lt;bool&gt;

+ getLeftMouseButtonState() : bool
+ getMiddleMouseButtonState() : bool
+ getRightMouseButtonState() . bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3220</x>
      <y>0</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1110</x>
      <y>1520</y>
      <w>190</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Fps
--
- fps : float
- frameTime : float 
--
+ calculateFPS() : void

+ getFPS() : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>620</x>
      <y>600</y>
      <w>260</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>bg=blue
letztere Methode sieht so komisch aus, 
weil als Parameter ein Pointer auf eine
Funktion übergeben wird</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>3350</x>
      <y>1500</y>
      <w>1670</w>
      <h>880</h>
    </coordinates>
    <panel_attributes>Environment
--
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3410</x>
      <y>1560</y>
      <w>460</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Map 
--
- m_width : int
- m_height : int
- m_tilewidth : int
- m_tileheight : int
- m_positionVector : Vector2D
- m_layerMap : map&lt;string, Layer*&gt;
--
+ init(params : const ParamLoader&amp;, tilewidth : int, tileheight: int) : void
+ update() : void
+ render() : void

+ addLayer(name : string, pNewLayer : Layer*) : void 

+ getCollisionLayer : TileLayer*
+ getObjectLayer : ObjectLayer*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4160</x>
      <y>1720</y>
      <w>210</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/Layer/
--
# m_positionVector : Vector2D
--
/+ update() : void/
/+ render() : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3480</x>
      <y>1970</y>
      <w>640</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>ObjectLayer
--
- m_gameObjects : vector&lt;GameObject*&gt;
- m_player : Player

- m_pCollisionLayers : vector&lt;TileLayer*&gt;*
--
+ init(pGameObjects : vector&lt;GameObject*&gt;*) : void
+ update() : void
+ render() : void

+ addCollisionLayer(pCollisionLayer : TileLayer*) : void

+ getGameObjects() : vector&lt;GameObject*&gt;*

- objectTileCollision(pGameObject : GameObject*) : void
- rectRectCollisonX(pLayer : TileLayer*, rectVector : Vector2D, collisonRect : ObjectRectangle) : bool
- rectRectCollisonY(pLayer : TileLayer*, rectVector : Vector2D, collisonRect : ObjectRectangle) : bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3870</x>
      <y>1800</y>
      <w>330</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4170</x>
      <y>1970</y>
      <w>410</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>TileLayer
--
- m_tilesets : vector&lt;Tileset&gt;
- m_tiles : vector&lt;vector&lt;Tile*&gt;&gt;
--
+ init(tilesets : vector&lt;Tileset&gt;, tiles : vector&lt;vector&lt;Tile*&gt;&gt;) : void
+ update() : void
+ render() : void

+ getTileIdAtPosition(positionVector : const Vector2D&amp;) : int
+ getTilesets() : vector&lt;Tileset&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4270</x>
      <y>1800</y>
      <w>30</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4630</x>
      <y>1970</y>
      <w>330</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>AnimationLayer
--
- m_animations : vector&lt;Animation*&gt;
--
+ init(pAnimations : vector&lt;GameObject*&gt;&amp;) : void
+ update() : void
+ render() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4350</x>
      <y>1800</y>
      <w>350</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4500</x>
      <y>1570</y>
      <w>310</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Tile
--
- m_tileID : int
- m_positionVector : Vector2D
- m_message : string

- m_width : int
- m_height : int
--
+ load(parameters : const ParamLoader*) : void
+ update() : void
+ draw() : void

+ getTileID() : int
+ getMessage() : string
+ getHeight() : int
+ getWidth() : int
+ getPositionVector() : Vector2D  </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3660</x>
      <y>730</y>
      <w>410</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
GameObjectFactory
--
- m_creatorMap : map&lt;string, BaseCreator*&gt;
--
+ registerType(id : string, pCreator : BaseCreator*, ) : void
+ create(ìd : string) : GameObject*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4480</x>
      <y>730</y>
      <w>260</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>/BaseCreator/
--
--
+ createGameObject() : GameObject*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4060</x>
      <y>780</y>
      <w>450</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3080</x>
      <y>490</y>
      <w>620</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>StateParser
--
_- hasLoadedTextures : bool_
--
_+ parse(filename : string, pObjects : vector&lt;GameObject*&gt;*, stateID : GameStateID) : bool_
_- loadTextures(pTextureNode : XMLElement*) : bool_
_- loadGameObjects(pCurrentStateNode : XMLElement*, pObjects : vector&lt;GameObject*&gt;*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4630</x>
      <y>1240</y>
      <w>30</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3660</x>
      <y>1050</y>
      <w>290</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Animation
--
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3940</x>
      <y>1090</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3750</x>
      <y>490</y>
      <w>950</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>MapParser
--
--
_+ parse(filename : string, pMapDict : map&lt;string, Map*&gt;&amp;, pMapStack : Stack&lt;Map*&gt;&amp;, pObjects : vector&lt;GameObject*&gt;, stateID : GameStateID) : bool_
_- parseMap(path : string, pMap : Map*) : bool_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1230</x>
      <y>370</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>bg=blue
Singleteon 
--
(Singleton-spezifische Sachen
 wurden ignoriert)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2280</x>
      <y>1900</y>
      <w>200</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>HowToPlayState
--
--
+ onEnter() : void 
+ onExit() : void 

+ handleInput(): void
+ update() : void 
+ render() : void 

_- backToMenu() : void_
- setCallbackFunctions() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2340</x>
      <y>1810</y>
      <w>280</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>260.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3660</x>
      <y>1180</y>
      <w>290</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Buttton
--
- m_callbackId : string
- m_callbackFunction : void(*)()
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void

+ getCallbackId() : string

+ setCallback(callback : void(*)()) : void
+ setCallbackId(callbackId : string) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3940</x>
      <y>1210</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>4640</x>
      <y>1360</y>
      <w>240</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>TODO: Vererbung implementieren
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>150</x>
      <y>850</y>
      <w>370</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>Camera
--
- m_positionVector : Vector2D
- m_cameraWidth : int
- m_cameraHeight : int
- m_pCenterObject : SDL_GameObject*
--
+ centerOnGameObject(object : SDL_GameObject*) : void
+ move(vector : Vector2D) : void
+ update() : void

+ getPositionVector() : Vector2D
+ getCameraWidth() : int 
+ getCameraHeight() : int

+ setPositionVector(vector : Vector2D) : void
+ setCameraWidth(cameraWidth : int) : void
+ setCameraHeight(cameraHeight : int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>750</x>
      <y>1490</y>
      <w>330</w>
      <h>410</h>
    </coordinates>
    <panel_attributes>ObjectRectangle
--
+ positionVector : Vector2D
+ width : int
+ height : int

- m_visible : bool
- m_color : SDL_Color
- m_rectAttributes : string
- m_showText : bool
- m_font : TTF_Font*
--
+ load(params : const ParamLoader&amp;) : void
+ update() : void
+ draw() : void

+ getX() : float
+ getY() : float
+ getWidth() : int
+ getHeight() : int
+ getShowText() : bool
+ getVisible() : bool

+ setColor(r : int, g : int, b: int, alpha : int) : void
+ setShowText(b : bool) : void
+ setVisible(b : bool) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>260</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>FontManager
--
- m_characterMap : map&lt;char, 
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>310</x>
      <y>1670</y>
      <w>420</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>RenderObject
--
- m_pReferenceObject : SDL_GameObject*
- m_renderPosition : Vector2D
- m_referenceDistance : Vector2D

- calculateReferenceDistance(referencePoint : Vector2D&amp;) : void
--
+ update() : void
+ render() : void 

+ getGameObject() : SDL_GameObject*
+ getReferenceDistance() : Vector2D
+ getRenderPosition() : Vector2D

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>820</y>
      <w>460</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>View
--
_- m_pCamera : Camera_
_- m_renderDict : map&lt;unsigned long long, RenderObject*&gt;_
_- m_renderQueue : vector&lt;unsigned long long&gt;_

--
_+ update() : void_
_+ render() : void_

_+ centerOnGameObject(objectId : unsigned long long) : void_
_+ addToView(pGameObject : GameObject*) : void_
_+ removeFromView(pGameObject : GameObject*) : void_
_+ removeFromView(objectId : unsigned long long) : void_
_+ addToRenderQueue(objectId : unsigned long long) : void_
_+ addToRenderQueue(objectIds : vector&lt;unsigned long long&gt;&amp;) : void_
_+ addToRenderQueue(objects : vector&lt;GameObject*&gt;&amp;) : void_

_+ getCamera() : Camera*_

_+ setCameraPosition(v : Vector2D) : void_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>310</x>
      <y>1560</y>
      <w>300</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>UniqueIdGenerator
--
_- m_currentTopNumber : unsigned long long_
--
_+ newID() : unsigned long long_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>970</y>
      <w>240</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
has</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
</diagram>
